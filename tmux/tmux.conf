# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# 25% horizontal split
unbind ^T
bind ^T split-window -p 25 -c '#{pane_current_path}'

# 30% vertical split
unbind ^U
bind ^U split-window -h -p 30 -c '#{pane_current_path}'

# Open a new pane in the current path
unbind c
bind c new-window -c '#{pane_current_path}'

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
# set -g status-right "#{?pane_synchronized,--SYNCED--,} #(is-online) #(battery -t -g white)  #(date '+%a, %b %d - %I:%M') "
set -g status-right 'Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %I:%M '
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #{?window_zoomed_flag,#[fg=colour226],} #I: #W #[fg=colour39,bg=colour234,nobold]⮀"

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -F "#{pane_current_path}"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Enable mouse mode (tmux 2.1 and above)
set-option -g -q mouse on
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down
# set -g mode-mouse on

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'

# Ctrl-s prefix key. Default => C-b. Send C-s with repeat option via C-s C-s
# unbind-key C-b
# set -g prefix C-s
# bind -r C-s send-prefix

# Start window numbering at 1 (default => 0)
# set -g base-index 1 # trying out the default again as this makes
# the 0th pane special, and the first and second more clear

set -g clock-mode-style 12

# Renumber windows after removing one
# set -g renumber-windows on

# Make Vim responsive to esc
# set -s escape-time 0

# I always miss this binding
# bind C-[ copy-mode
#
# bind m split-window -h 'reattach-to-user-namespace mutt'
#
bind g split-window -c "#{pane_current_path}" -h -p 50 'gitsh'

# quick access to updating plans
# bind A run-shell 'newp=$(tmux new-window -c ~/code/work/upcase/upcase/ -d -P "reattach-to-user-namespace production console"); tmux split-window -t "$newp" -p 50 -h -c ~/code/work/upcase/scripts/ "reattach-to-user-namespace vim admin.rb +VtrAttachToPane"'

# bind D split-window -h -c ~/code/dotfiles "reattach-to-user-namespace vim +CtrlP"

# Quick unsub
# bind-key U split-window -h -c ~/code/ibz 'bin/rake unsubscribe'

# Use vim keybindings in copy mode
# setw -g mode-keys vi
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#
# unbind -t vi-copy Space
# bind -t vi-copy Space jump-again
# bind-key -t vi-copy 0 back-to-indentation

# bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
# bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '

    bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Secondary binding for C-l to retain redraw
    bind C-l send-keys 'C-l'

# Easy rotating of panes
    bind C-k swap-pane -U

    bind-key T new-window -n 'tagwatch' -d 'echo tagwatching && tagwatch -v'

# Quick access to todo file
    # bind t split-window -h -c ~/wiki "reattach-to-user-namespace vim todo.md"
    # bind j split-window -h -c ~/wiki "reattach-to-user-namespace vim +JournalEntry"

# Quick access to wiki
    # bind w split-window -h -c ~/wiki "reattach-to-user-namespace vim +CtrlP"
    # bind W split-window -h -c ~/wiki 'reattach-to-user-namespace vim routines.md +"/^Morning Work" +"set foldlevel=0" +"nohlsearch" +"normal zv"'
    # bind u split-window -h -c ~/wiki "reattach-to-user-namespace vim +'CtrlP upcase'"

# Create a new session from fuzzy project list
    # bind C-t split-window -v "source ~/.zshrc && tm-select-session"
#
# Binding to toggle synchronize panes
    is_synched='[[ $(tmux show-window-options -v synchronize-panes) == "on" ]]'
    bind-key S if-shell "$is_synched" "set-window-option synchronize-panes off" "set-window-option synchronize-panes on"

# Dismiss current pane to background window
    # bind b break-pane -d
    # bind C-b send-keys 'tat && exit' 'C-m'
    # bind-key ! run-shell '(tmux switch-client -l || tmux switch-client -n) && tmux kill-session -t "#S" || tmux kill-session'
    # bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
    bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# more intuitive keybindings for splitting
    # bind \ split-window -h -c "#{pane_current_path}"
    # bind - split-window -v -c "#{pane_current_path}"
    #
    # bind c new-window -c "#{pane_current_path}"

# Make C-j display a selectable list of sessions
# bind C-j choose-tree
    bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Quick session switching back and forth. I never use the built in layouts
# (default mapping for Space), so I reclaimed the key for this
    bind-key Space switch-client -l

# Keep window names as I set them
    setw -g automatic-rename on

# Search for URL in  for splitting
    # bind \ split-window -h -c "#{pane_ sbind - split-window -v -c "#{pane_current_path}"
    #
    # bind c new-wgs#{pane_current_path}"

# Make C-j display a selectable list of sessionaud C-j choose-tree
#     bind C-j split-window -v "tmux list-sessions | sed -E 's/e,st-sessions | sed -E 's/:.*$//' | grep -v \"^$(tm -age -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -tre session switching back and forth. I never use the built in layouts
# #  -t mapping for Space), so I reclaimed the key for this
#     bind-key Space switchesis
#     bind-key Space switch-client -l

# Keep window-n them
    setw -g automatic-rename on

# Provide access to the clipboard for pbpaste, pbcopy (details: http://goo.gl/DN82E)
set-option -g default-command "reattach-to-user-namespace -l zsh"

bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Show the battery plugin on the navbar
# https://github.com/tmux-plugins/tmux-battery
run-shell ~/tmux-battery/battery.tmux
# set -g @plugin 'tmux-plugins/tmux-battery'
